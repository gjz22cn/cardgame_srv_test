var fj_rsp = 0;
function message_handle(message, client) {
    var msgStr = message.toString('ascii', 0, message.length-1);
    console.log("\r\n===========================");
    console.log(msgStr);
    if (msgStr[0] != '{') { /*'{'*/
        if (fj_rsp==1) {
            sendready(msg, client);
        } else {
            client.write(";");
        }
        console.log("return: is not json format!");
        return;
    }

    var msg = JSON.parse(msgStr);
    if (typeof(msg.c) == "undefined") {
        client.write(";");
        console.log("return: msg type is missing!");
        return;
    }
    
    if (msg.c == "fj") {
        replyfastjoin(msg, client);
        senduser(msg, client);
        fj_rsp = 1;
    } else if (msg.c == "dolk") {
        sendready(msg, client);
    } else {
        if (fj_rsp==1) {
            sendready(msg, client);
        } else {
            client.write(";");
        }
        console.log("unknown cmd: " + msg.c + "!");
    }
}
 
function replyfastjoin(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"fj",                 // fast join
            d:"",                 //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
            c:"1001",           // 房间编号
            hn:"test_room",     // 房间名称
            r:1,                // 房间倍数
            bp:100              // 房间每局底数
            /*
               u") private int unitType; // 交易单位 0 积分、1 豆
               l") private long limit = 0; // 允许进入的最低限制
               pw") private String password; // 房间密码
               ln") private int limitGroupNum = 0; // 每次参与游戏的人数
               cn") private long commissionNum; // 抽取的拥金数
               ht") private int homeType; // 0:普通房间/1:VIP/2:VIP包房/3:专场/4:钻石专场/5:合成挤专场/6:
               hc") private String hallCode; // 大厅编号
               up") private long upper; // 上限
               private int registFee; // 报名费
               private String explanation;// 环境说明
               s") private int sort; // 房间在大厅排序
               mc") private int maxCount; // 房间最大支持人数 0不限制
               v") private int version; // 房间版本号 版本号 有变化代表房间数据有更改，前台需要更新
               rh") private String resHall; // 大厅展示资源下载目录
               rhu") private String resHallUrl; // 大厅展示资源下载地址
               si") private String serverIp; // 游戏服务器IP
               gs") private String gameServer; // 游戏服务器地址（临时变量，不存储） 格式 192.168.0.1:8080
               rl") private String rule; // 专场游戏物品赠送规则
               sr") private String startRace; // 专场开始时间
               pt") private Integer playType; // 游戏比赛类型
               de") private String detail; // 游戏房间说明
               ma") private String maxAward; // 最大奖励
               pp") private Long prizePool; //奖金池金豆
               ro") private GameRoomRuleDetail roomDetail; // 游戏房间详细说明
               ra") private Integer raceType; // 比赛类型(1即时赛，2排位赛)
               rt") private int roomType; // 房间类型：0大厅房，1超快赛房，2排位赛房/6:挖矿场
             */
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

function sendready(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"s",                 // ready
            d:"",                 //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
        cd:",1,2,3,4,5,6,7,8,9",
        o:2
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

function senduser(msg, client) {
    var gameserverIp="192.168.1.101";
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"ui",                 //玩家资料
            d:"",                   //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var map = {};
    var user={
                a:"", // 游戏账号
                ra:"",// 关联账号
                n:"",// 昵称
                t:0, // 玩家类型 0：一般玩家 1：机器人
                b:300000, //金豆
                gs:gameserverIp, // 所在游戏服务器
                cn:"", // 姓名
                p:"1234", // 账户密码
                mp:"81dc9bdb52d04dc20036dbd8313ed055", // 加密密码
                gd:"2", // 性别 0保密1女2男
                pn:"13999999999", // 联系号码
                e:"test@test.com", // email
                iup:"1", // 是否修改过密码0未修改过1已经修改过
                cd:"", // 创建时间
                ud:"", // 更新时间
                hi:"", // 头像
                so:1, // 用户排名
                ak:"", // 安全验证签名密钥
                rt:"", // 房间更新时间
                hw:0,// 已经赢[钻石挖矿场使用]
                jt:0,// 记牌器剩余有效时间(s)
                nw:0,// 需要赢
                ot:600, //比赛剩余秒数
                lt:"", // 游戏内部登录Token
                gt:1, // 当前玩的游戏类型 1：斗地主 2：麻将 3：锄大地
                ir:false, // 是否参加比赛 true:已参加 false:未参加
                rn:"rom1", // 房间名称
                round:0, // 轮次
                level:1, // 比赛阶段 1:预赛 2:决赛
                rank:2, // 用户排名
                cred:100, // 用户积分
                iq:0, // 等级等级
                //ii: private Map<String, String> iqImg; // 等级头像图标(0女地主,1男地主,2女农民,3男农民)
                tl:"title", // 称号
                in:10000, // 当前经验
                ni:10000, // 达到下一级等级所需经验
                //li:private Map<String, String> levelImg; // 等级图标(key:count,value:imagePath)
                dis:800, // 钻石的数量
                tpm:"no tipMes" // 无记牌器时的提示文本
    };

    user["a"] = "111111";
    user["ra"] = "111111";
    user["n"] = "上家";
    user["cn"] = "111111";
    map["1"] = user;

    user["a"] = "123456";
    user["ra"] = "123456";
    user["n"] = "我";
    user["cn"] = "123456";
    map["2"] = user;

    user["a"] = "222222";
    user["ra"] = "222222";
    user["n"] = "下家";
    user["cn"] = "222222";
    map["3"] = user;
    //detail["map"][id] = user;
    //ret["d"] = JSON.stringify(detail);
    //ret["d"] = detail;
    ret["d"] = JSON.stringify(map);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");    
}

module.exports.message_handle = message_handle;
